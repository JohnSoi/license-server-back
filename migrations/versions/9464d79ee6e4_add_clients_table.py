"""add_clients_table

Revision ID: 9464d79ee6e4
Revises: 7b85cd166eae
Create Date: 2022-07-14 18:52:48.119902

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '9464d79ee6e4'
down_revision = '7b85cd166eae'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('accruals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.Column('update_at', sa.DateTime(), nullable=True),
    sa.Column('delete_at', sa.DateTime(), nullable=True),
    sa.Column('uuid', postgresql.UUID(), nullable=True),
    sa.Column('sum', sa.Float(), nullable=True),
    sa.Column('invoice_id', sa.Integer(), nullable=True),
    sa.Column('client_uuid', postgresql.UUID(), nullable=True),
    sa.Column('license_uuid', postgresql.UUID(), nullable=True),
    sa.Column('type_paid_uuid', postgresql.UUID(), nullable=True),
    sa.Column('create_user_id', sa.Integer(), nullable=True),
    sa.Column('update_user_id', sa.Integer(), nullable=True),
    sa.Column('delete_user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['create_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['delete_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['update_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('clients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.Column('update_at', sa.DateTime(), nullable=True),
    sa.Column('delete_at', sa.DateTime(), nullable=True),
    sa.Column('uuid', postgresql.UUID(), nullable=True),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('inn', sa.Integer(), nullable=True),
    sa.Column('kpp', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('photo', sa.Text(), nullable=True),
    sa.Column('license_uuid', postgresql.UUID(), nullable=True),
    sa.Column('create_user_id', sa.Integer(), nullable=True),
    sa.Column('update_user_id', sa.Integer(), nullable=True),
    sa.Column('delete_user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['create_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['delete_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['update_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_index(op.f('ix_clients_name'), 'clients', ['name'], unique=False)
    op.create_table('type_paids',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.Column('update_at', sa.DateTime(), nullable=True),
    sa.Column('delete_at', sa.DateTime(), nullable=True),
    sa.Column('uuid', postgresql.UUID(), nullable=True),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('create_user_id', sa.Integer(), nullable=True),
    sa.Column('update_user_id', sa.Integer(), nullable=True),
    sa.Column('delete_user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['create_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['delete_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['update_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_index(op.f('ix_type_paids_name'), 'type_paids', ['name'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_type_paids_name'), table_name='type_paids')
    op.drop_table('type_paids')
    op.drop_index(op.f('ix_clients_name'), table_name='clients')
    op.drop_table('clients')
    op.drop_table('accruals')
    # ### end Alembic commands ###
